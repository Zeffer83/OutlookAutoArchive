name: Release Outlook Auto Archive

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: windows-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PS2EXE
        shell: powershell
        run: |
          Install-Module -Name PS2EXE -Force -Scope CurrentUser

      - name: Build executables
        shell: powershell
        run: |
          # Extract version number without 'v' prefix
          $version = "${{ github.ref_name }}".Replace("v", "")

          # Build main application executable
          ps2exe -inputFile "OutlookAutoArchive.ps1" -outputFile "OutlookAutoArchive.exe" -title "Outlook Auto Archive" -version "$version" -company "Ryan Zeffiretti" -product "Outlook Auto Archive" -copyright "Copyright (c) 2025 Ryan Zeffiretti. MIT License" -description "Automatically archives old emails from Outlook accounts" -trademark "MIT License"

          # Build task scheduler setup executable
          ps2exe -inputFile "setup_task_scheduler.ps1" -outputFile "setup_task_scheduler.exe" -title "Outlook Auto Archive - Task Scheduler Setup" -version "$version" -company "Ryan Zeffiretti" -product "Outlook Auto Archive Task Scheduler" -copyright "Copyright (c) 2025 Ryan Zeffiretti. MIT License" -description "Setup script for Outlook Auto Archive scheduled tasks" -trademark "MIT License"

      - name: Create release package
        id: create_release_package
        shell: powershell
        run: |
          $version = "${{ github.ref_name }}".Replace("v", "")
          $zipName = "OutlookAutoArchive-v$version.zip"

          # Create release directory
          New-Item -ItemType Directory -Path "release" -Force

          # Copy files to release directory
          Copy-Item "OutlookAutoArchive.exe" "release/"
          Copy-Item "OutlookAutoArchive.ps1" "release/"
          Copy-Item "setup_task_scheduler.exe" "release/"
          Copy-Item "setup_task_scheduler.ps1" "release/"
          Copy-Item "README.md" "release/"
          Copy-Item "CHANGELOG.md" "release/"
          Copy-Item "LICENSE" "release/"
          Copy-Item "SECURITY.md" "release/"
          Copy-Item "CONTRIBUTING.md" "release/"
          Copy-Item "icon.ico" "release/" -ErrorAction SilentlyContinue

          # Create zip file
          Compress-Archive -Path "release/*" -DestinationPath $zipName -Force

          # Set output for next step
          echo "zip_name=$zipName" >> $env:GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Outlook Auto Archive ${{ github.ref_name }}
          body: |
            ## ðŸŽ‰ Outlook Auto Archive ${{ github.ref_name }}

            ### âœ¨ What's New

            **Console Compatibility**: Replaced Unicode emojis with ASCII-compatible alternatives for universal display
            **Enhanced User Interface**: Beautiful ASCII art banners and professional styling throughout the application
            **Task Scheduler Setup**: New user-friendly setup script with enhanced UI/UX

            ### ðŸ“¦ Installation

            1. Download the `OutlookAutoArchive.exe` file
            2. Run the executable (Windows will attempt to unblock it automatically)
            3. Follow the setup wizard to configure your preferences
            4. Use `setup_task_scheduler.exe` to set up automatic scheduling

            ### ðŸš€ Quick Start

            - **Main Application**: `OutlookAutoArchive.exe` - The main archiving application
            - **Task Scheduler Setup**: `setup_task_scheduler.exe` - Easy setup for automatic scheduling

            ### ðŸ”§ Features

            - **Automatic Email Archiving**: Moves old emails to organized year/month folders
            - **Configurable Retention**: Set how long emails stay in your Inbox (default: 14 days)
            - **Dry-Run Mode**: Test before actually moving emails
            - **Gmail Support**: Works with Gmail accounts using labels
            - **Skip Rules**: Exclude specific emails from archiving
            - **Comprehensive Logging**: Detailed logs for troubleshooting
            - **Windows Task Scheduler**: Set up automatic archiving
            - **Console Compatibility**: Works on all Windows systems regardless of console encoding

            ### ðŸ“‹ System Requirements

            - Windows 10/11
            - Microsoft Outlook (desktop app)
            - PowerShell 5.1 or later

            ### ðŸ“„ Documentation

            See `README.md` for detailed usage instructions and `CHANGELOG.md` for version history.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.create_release_package.outputs.zip_name }}
          asset_name: ${{ steps.create_release_package.outputs.zip_name }}
          asset_content_type: application/zip
